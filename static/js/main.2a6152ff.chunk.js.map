{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","linea1","setlinea1","linea2","setlinea2","imagen","setimagen","className","onChange","valor","target","value","type","placeholder","onClick","alert","html2canvas","document","querySelector","then","canvas","img","toDataURL","link","createElement","download","href","click","id","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAkEeA,MA9Df,WAGE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAeC,EAAf,KA0BA,OAEE,sBAAKC,UAAU,MAAf,UAEE,yBAAQA,UAAU,SAASC,SAnBR,SAACC,GACtBH,EAAUG,EAAMC,OAAOC,QAkBrB,UACE,wBAAQJ,UAAU,SAASI,MAAM,OAAjC,4BACA,wBAAQJ,UAAU,SAASI,MAAM,WAAjC,sBACA,wBAAQJ,UAAU,SAASI,MAAM,UAAjC,6BACA,wBAAQJ,UAAU,SAASI,MAAM,SAAjC,oBACA,wBAAQJ,UAAU,SAASI,MAAM,gBAAjC,2BACA,wBAAQJ,UAAU,SAASI,MAAM,QAAjC,0BACO,uBAEV,uBAAOH,SApCa,SAACC,GACtBP,EAAUO,EAAMC,OAAOC,QAmCYJ,UAAU,QAAQK,KAAK,OAAOC,YAAY,qBAX7E,IAWmG,uBAElG,uBAAQL,SAlCY,SAACC,GACtBL,EAAUK,EAAMC,OAAOC,QAiCYJ,UAAU,QAAQK,KAAK,OAAOC,YAAY,qBAAqB,uBAEjG,wBAAQC,QA7Ba,WACtBC,MAAM,YACNC,IAAYC,SAASC,cAAc,UAAUC,MAAK,SAAAC,GAChD,IAAIC,EAAMD,EAAOE,UAAU,aACvBC,EAAON,SAASO,cAAc,KAClCD,EAAKE,SAAW,WAChBF,EAAKG,KAAOL,EACZE,EAAKI,YAsB4BpB,UAAU,QAA5C,sBAGC,sBAAKA,UAAU,OAAOqB,GAAG,OAAzB,UACE,sBAAMrB,UAAU,SAAhB,SAA0BN,IAAc,uBACxC,sBAAMM,UAAU,SAAhB,SAA0BJ,IAC1B,qBAAK0B,IAAK,QAAQxB,EAAO,OAAQyB,IAAI,YChD9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.2a6152ff.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport html2canvas from 'html2canvas'\n\nfunction App() {\n\n  //consfiguracion y edicion del primer input \n  const [linea1, setlinea1] = useState('');\n  //consfiguracion y edicion del segundo input\n  const [linea2, setlinea2] = useState('');\n  //consfiguracion y edicion del boton \n  const [imagen, setimagen] = useState('fire');\n\n  //funcion para obtener el primer input\n  const onChangeLinea1 = (valor) =>{\n    setlinea1(valor.target.value)\n  };\n  //función para obtener el segundo input\n  const onChangeLinea2 = (valor) =>{\n    setlinea2(valor.target.value)\n  };\n\n  const onChangeImagen = (valor)=>{\n    setimagen(valor.target.value)\n  };\n  const onClickExportar = ()=>{\n    alert('exportar');\n    html2canvas(document.querySelector(\"#meme\")).then(canvas => {\n      var img = canvas.toDataURL('image/png');\n      var link = document.createElement('a');\n      link.download = 'meme.png';\n      link.href = img;\n      link.click();\n  });\n  \n  }\n\n  return (\n\n    <div className=\"App\">\n     {/*Select picker de memes */}\n      <select className=\"select\" onChange={onChangeImagen}>\n        <option className=\"option\" value=\"fire\">Casa en llamas</option>\n        <option className=\"option\" value=\"futurama\">Futurama</option>\n        <option className=\"option\" value=\"history\">History Channel</option>\n        <option className=\"option\" value=\"matrix\">Matrix</option>\n        <option className=\"option\" value=\"philosoraptor\">Philosoraptor</option>\n        <option className=\"option\" value=\"smart\">Smart Guy</option>\n      </select><br/>\n     {/*Input text-primer línea*/}\n     <input onChange={onChangeLinea1}  className=\"input\" type=\"text\" placeholder=\"  Texto superior\" /> <br/>\n     {/*Input text -Segunda línea*/}\n     <input  onChange={onChangeLinea2} className=\"input\" type=\"text\" placeholder=\"  Texto inferior\" /><br/>\n     {/*Boton exportar*/}\n     <button onClick={onClickExportar} className=\"boton\">Exportar</button>\n\n      {/*Extructura del meme */}\n      <div className=\"meme\" id=\"meme\">\n        <span className=\"linea1\">{linea1}</span><br/>\n        <span className=\"linea2\">{linea2}</span>\n        <img src={'/img/'+imagen+'.jpg'} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}